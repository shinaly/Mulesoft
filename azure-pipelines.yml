variables:
  build: 'maven'
  vmImage: 'ubuntu-latest'
  pkgFeed: 'Playground/java-demo'
  buildArtifactName: 'drop'
  
  #Maven options
  mvnTestOptions: '-DruntimeProduct=MULE'
  mvnCompileOptions: '-DruntimeProduct=MULE'
  mvnPkgOptions: '-DskipTests=true'
  buildToPublish: '**/*'
  packageToPublish: '**/*.jar'
  mvnTestResultsFiles: '**/TEST-*.xml'
  
  #Fortify options
  fortifyAppName: 'java-test'
  fortifyAppVersion: '1.1'
  fortifyBuildId: $(Build.BuildId)
  fortifySourceVersion: '8'
  
parameters:
- name: jdkVersion #x where version is 1.x
  type: number
  default: 11
  values:
    - 6 #lts
    - 7 #preinstalled
    - 8 #preinstalled
    - 11 #preinstalled
    - 12 #preinstalled

resources:
  repositories:
  - repository: templates
    name: "Playground/pattern-library"
    type: git
    ref: rev

stages:
- stage: buildApplication
  displayName: 'Build Application'
  jobs:
  - job: build
    displayName: 'Build'
    pool:
      vmImage: $(vmImage)
    steps:
    - template: /templates/java-maven/step-init.yml
      parameters:
        pkgFeed: $(pkgFeed)
        jdkVersion: ${{ parameters.jdkVersion }}
    - template: /templates/java-maven/step-compile.yml
      parameters:
        jdkVersion: ${{ parameters.jdkVersion }}
        options: $(mvnCompileOptions)
    - template: /templates/generic/step-publish-pipeline-artifact.yml          
      parameters:
        toPublish: $(buildToPublish)
        artifactName: $(buildArtifactName)
  - job: quality
    displayName: 'Quality'
    pool:
      vmImage: $(vmImage)
    dependsOn: build
    condition: succeeded()
    steps:
    - template: /templates/generic/step-download-pipeline-artifact.yml
      parameters:
        buildArtifactName: $(buildArtifactName)
    - template: /templates/java-maven/step-init.yml
      parameters:
        pkgFeed: $(pkgFeed)
        jdkVersion: ${{ parameters.jdkVersion }}
    - template: /templates/java-maven/step-ut.yml
      parameters:
        jdkVersion: ${{ parameters.jdkVersion }}
        options: $(mvnTestOptions)
        testResultsFiles: $(mvnTestResultsFiles)
        testRunTitle: ''
    - template: /templates/generic/step-quality-sonar.yml
  - job: security
    displayName: 'Security'
    pool: 'DevSecOps Agent Pool'
    dependsOn: build
    condition: succeeded()
    steps:
    - template: /templates/generic/step-download-pipeline-artifact.yml
      parameters:
        buildArtifactName: $(buildArtifactName)
    - template: /templates/generic/step-sca-whitesource.yml
      parameters:
        pkgFeed: $(pkgFeed)
        args: ''
    - template: /templates/generic/step-sast-fortify.yml
      parameters:
        buildId: $(fortifyBuildId)
        applicationType: 'java'
        customRules: ''
        scanParams: ''
        buildAnalyzerParams: ''
        classPath: ''
        sourceVersion: $(fortifySourceVersion)
        sourcePath: ''
        buildOptions: ''
        sourceTranslate: ''
        otherTranslate: ''
        appName: $(fortifyAppName)
        appVersion: $(fortifyAppVersion)
        sscProxyUrl: ''
        sscProxyUser: ''
        sscProxyPass: ''
  - job: package
    displayName: 'Package'
    pool:
      vmImage: $(vmImage)
    dependsOn:
    - quality
    - security
    condition: succeeded()
    steps:
    - template: /templates/generic/step-download-pipeline-artifact.yml
      parameters:
        buildArtifactName: $(buildArtifactName)
    - template: /templates/java-maven/step-init.yml
      parameters:
        pkgFeed: $(pkgFeed)
        jdkVersion: ${{ parameters.jdkVersion }}
    - template: /templates/java-maven/step-package.yml
      parameters:
        jdkVersion: ${{ parameters.jdkVersion }}
        options: $(mvnPkgOptions)
    - template: /templates/generic/step-publish-pipeline-artifact.yml          
      parameters:
        toPublish: $(packageToPublish)
        artifactName: 'package'

- stage: deployApplication
  displayName: 'Deploy Application'
  dependsOn: buildApplication
  jobs:
  - job: deploy
    displayName: 'Deploy'
    steps:
    - template: /templates/generic/step-download-pipeline-artifact.yml
- stage: verifyApplication
  displayName: 'Verify Application'
  dependsOn: deployApplication
  jobs:
  - job: security
    displayName: 'Security'
    steps:
    - template: /templates/generic/step-dast-webinspect.yml
  - job: functionalTest
    displayName: 'Functional Test'
    steps:
    - template: /templates/generic/step-ft-tosca.yml
